//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TwitterWeb.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBContext : DbContext
    {
        public DBContext()
            : base("name=DBContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UsersTweet> UsersTweets { get; set; }
        public virtual DbSet<LikeTweet> LikeTweets { get; set; }
        public virtual DbSet<CommentTweet> CommentTweets { get; set; }
        public virtual DbSet<FollowUser> FollowUsers { get; set; }
        public virtual DbSet<UserNotification> UserNotifications { get; set; }
        public virtual DbSet<CommentReply> CommentReplies { get; set; }
        public virtual DbSet<ForgotPasswordToken> ForgotPasswordTokens { get; set; }
        public virtual DbSet<Otp> Otps { get; set; }
        public virtual DbSet<UserPassword> UserPasswords { get; set; }
    
        public virtual int AddUsers(string userName, string userEmail, string userPassword, string profilePic, string profileBgPic)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            var userPasswordParameter = userPassword != null ?
                new ObjectParameter("UserPassword", userPassword) :
                new ObjectParameter("UserPassword", typeof(string));
    
            var profilePicParameter = profilePic != null ?
                new ObjectParameter("ProfilePic", profilePic) :
                new ObjectParameter("ProfilePic", typeof(string));
    
            var profileBgPicParameter = profileBgPic != null ?
                new ObjectParameter("ProfileBgPic", profileBgPic) :
                new ObjectParameter("ProfileBgPic", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUsers", userNameParameter, userEmailParameter, userPasswordParameter, profilePicParameter, profileBgPicParameter);
        }
    }
}
